{"ast":null,"code":"export function getBubbleSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array; //const auxiliaryArray = array.slice();\n\n  bubbleSortHelper(array, array.length - 1, animations);\n  return animations;\n}\n\nfunction bubbleSortHelper(array, endIndex, animations) {\n  for (let i = 0; i < endIndex; i++) {\n    for (let j = 0; j < endIndex - i; j++) {\n      animations.push([j, j + 1]);\n      animations.push([j, j + 1]); // swap array[j+1] with arr[i+1] if adjacent is larger\n\n      if (array[j] > array[j + 1]) {\n        let swappedVal = array[j];\n        animations.push([j, array[j + 1]]);\n        array[j] = array[j + 1];\n        animations.push([j + 1, swappedVal]);\n        array[j + 1] = swappedVal;\n      } else {\n        animations.push([j, array[j]]);\n        animations.push([j + 1, array[j + 1]]);\n      }\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/lbr20/Desktop/blr-portfolio/src/projects/sortingVisualizer/src/SortingAlgorithms/BubbleSort.js"],"names":["getBubbleSortAnimations","array","animations","length","bubbleSortHelper","endIndex","i","j","push","swappedVal"],"mappings":"AAAA,OAAO,SAASA,uBAAT,CAAiCC,KAAjC,EAAwC;AAC7C,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAID,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB,OAAOF,KAAP,CAFsB,CAG7C;;AACAG,EAAAA,gBAAgB,CAACH,KAAD,EAAQA,KAAK,CAACE,MAAN,GAAe,CAAvB,EAA0BD,UAA1B,CAAhB;AACA,SAAOA,UAAP;AACD;;AAED,SAASE,gBAAT,CAA0BH,KAA1B,EAAiCI,QAAjC,EAA2CH,UAA3C,EAAuD;AACrD,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAApB,EAA8BC,CAAC,EAA/B,EAAmC;AACjC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,GAAGC,CAA/B,EAAkCC,CAAC,EAAnC,EAAuC;AACrCL,MAAAA,UAAU,CAACM,IAAX,CAAgB,CAACD,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAhB;AACAL,MAAAA,UAAU,CAACM,IAAX,CAAgB,CAACD,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAhB,EAFqC,CAGrC;;AACA,UAAIN,KAAK,CAACM,CAAD,CAAL,GAAWN,KAAK,CAACM,CAAC,GAAG,CAAL,CAApB,EAA6B;AAC3B,YAAIE,UAAU,GAAGR,KAAK,CAACM,CAAD,CAAtB;AAEAL,QAAAA,UAAU,CAACM,IAAX,CAAgB,CAACD,CAAD,EAAIN,KAAK,CAACM,CAAC,GAAG,CAAL,CAAT,CAAhB;AACAN,QAAAA,KAAK,CAACM,CAAD,CAAL,GAAWN,KAAK,CAACM,CAAC,GAAG,CAAL,CAAhB;AACAL,QAAAA,UAAU,CAACM,IAAX,CAAgB,CAACD,CAAC,GAAG,CAAL,EAAQE,UAAR,CAAhB;AACAR,QAAAA,KAAK,CAACM,CAAC,GAAG,CAAL,CAAL,GAAeE,UAAf;AACD,OAPD,MAOO;AACLP,QAAAA,UAAU,CAACM,IAAX,CAAgB,CAACD,CAAD,EAAIN,KAAK,CAACM,CAAD,CAAT,CAAhB;AACAL,QAAAA,UAAU,CAACM,IAAX,CAAgB,CAACD,CAAC,GAAG,CAAL,EAAQN,KAAK,CAACM,CAAC,GAAG,CAAL,CAAb,CAAhB;AACD;AACF;AACF;AACF","sourcesContent":["export function getBubbleSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  //const auxiliaryArray = array.slice();\r\n  bubbleSortHelper(array, array.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\nfunction bubbleSortHelper(array, endIndex, animations) {\r\n  for (let i = 0; i < endIndex; i++) {\r\n    for (let j = 0; j < endIndex - i; j++) {\r\n      animations.push([j, j + 1]);\r\n      animations.push([j, j + 1]);\r\n      // swap array[j+1] with arr[i+1] if adjacent is larger\r\n      if (array[j] > array[j + 1]) {\r\n        let swappedVal = array[j];\r\n\r\n        animations.push([j, array[j + 1]]);\r\n        array[j] = array[j + 1];\r\n        animations.push([j + 1, swappedVal]);\r\n        array[j + 1] = swappedVal;\r\n      } else {\r\n        animations.push([j, array[j]]);\r\n        animations.push([j + 1, array[j + 1]]);\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}