{"ast":null,"code":"export function getQuickSortAnimations(array){var animations=[];console.log(array);if(array.length<=1)return array;quickSortHelper(array,0,array.length-1,animations);console.log(array);return animations;}function quickSortHelper(array,left,right,animations){if(left<right){var partitionIndex=partiton(array,left,right,animations);quickSortHelper(array,left,partitionIndex-1,animations);quickSortHelper(array,partitionIndex+1,right,animations);}}function partiton(array,left,right,animations){var pivot=array[right];var i=left-1;for(var j=left;j<right;j++){animations.push([j,right]);animations.push([j,right]);if(array[j]<=pivot){i++;var _swappedVal=array[i];animations.push([i,array[j]]);array[i]=array[j];animations.push([j,_swappedVal]);array[j]=_swappedVal;}else{animations.push([j,array[j]]);animations.push([j,array[j]]);}// exit for loop check for pivot animation\nif(j!==right-1){animations.push([j,array[j]]);animations.push([j,array[j]]);}}// swap the pivot\nvar swappedVal=array[i+1];animations.push([i+1,array[right]]);array[i+1]=array[right];animations.push([right,swappedVal]);array[right]=swappedVal;return i+1;}","map":{"version":3,"sources":["C:/Users/lbr20/Desktop/blr-portfolio/src/projects/sortingVisualizer/src/SortingAlgorithms/QuickSort.js"],"names":["getQuickSortAnimations","array","animations","console","log","length","quickSortHelper","left","right","partitionIndex","partiton","pivot","i","j","push","swappedVal"],"mappings":"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","sourcesContent":["export function getQuickSortAnimations(array) {\r\n  const animations = [];\r\n  console.log(array);\r\n  if (array.length <= 1) return array;\r\n  quickSortHelper(array, 0, array.length - 1, animations);\r\n  console.log(array);\r\n  return animations;\r\n}\r\n\r\nfunction quickSortHelper(array, left, right, animations) {\r\n  if (left < right) {\r\n    let partitionIndex = partiton(array, left, right, animations);\r\n    quickSortHelper(array, left, partitionIndex - 1, animations);\r\n    quickSortHelper(array, partitionIndex + 1, right, animations);\r\n  }\r\n}\r\n\r\nfunction partiton(array, left, right, animations) {\r\n  let pivot = array[right];\r\n  let i = left - 1;\r\n\r\n  for (let j = left; j < right; j++) {\r\n    animations.push([j, right]);\r\n    animations.push([j, right]);\r\n    if (array[j] <= pivot) {\r\n      i++;\r\n\r\n      let swappedVal = array[i];\r\n      animations.push([i, array[j]]);\r\n      array[i] = array[j];\r\n      animations.push([j, swappedVal]);\r\n      array[j] = swappedVal;\r\n    } else {\r\n      animations.push([j, array[j]]);\r\n      animations.push([j, array[j]]);\r\n    }\r\n    // exit for loop check for pivot animation\r\n    if (j !== right - 1) {\r\n      animations.push([j, array[j]]);\r\n      animations.push([j, array[j]]);\r\n    }\r\n  }\r\n\r\n  // swap the pivot\r\n  let swappedVal = array[i + 1];\r\n  animations.push([i + 1, array[right]]);\r\n  array[i + 1] = array[right];\r\n  animations.push([right, swappedVal]);\r\n  array[right] = swappedVal;\r\n\r\n  return i + 1;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}